{"version":3,"file":"angular-cd-timer.umd.js","sources":["ng://angular-cd-timer/lib/angular-cd-timer.component.ts","ng://angular-cd-timer/lib/angular-cd-timer.interface.ts","ng://angular-cd-timer/lib/angular-cd-timer.module.ts"],"sourcesContent":["\nimport {\n  AfterViewInit,\n  Component, ElementRef, EventEmitter, Input, OnDestroy, Output, Renderer2\n} from '@angular/core';\nimport {TimeInterface} from './angular-cd-timer.interface';\n\n@Component({\n  selector: 'cd-timer',\n  template: ' <ng-content></ng-content>'\n})\nexport class CdTimerComponent implements AfterViewInit, OnDestroy {\n  private timeoutId: any;\n  private tickCounter: number;\n  private ngContentSchema: string;\n\n  private seconds: number;\n  private minutes: number;\n  private hours: number;\n  private days: number;\n\n  @Input() startTime: number;\n  @Input() endTime: number;\n  @Input() countdown: boolean;\n  @Input() autoStart: boolean;\n  @Input() maxTimeUnit: string;\n  @Input() format: string;\n  @Output() onStart: EventEmitter<CdTimerComponent> = new EventEmitter<CdTimerComponent>();\n  @Output() onStop: EventEmitter<CdTimerComponent> = new EventEmitter<CdTimerComponent>();\n  @Output() onTick: EventEmitter<TimeInterface> = new EventEmitter<TimeInterface>();\n  @Output() onComplete: EventEmitter<CdTimerComponent> = new EventEmitter<CdTimerComponent>();\n\n  constructor(private elt: ElementRef, private renderer: Renderer2) {\n    // Initialization\n    this.autoStart  = true;\n    this.startTime  = 0;\n    this.endTime    = 0;\n    this.timeoutId  = null;\n    this.countdown  = false;\n    this.format     = 'default';\n  }\n\n  ngAfterViewInit() {\n    const ngContentNode = this.elt.nativeElement.lastChild;    // Get last child, defined by user or span\n    this.ngContentSchema = ngContentNode ? ngContentNode.nodeValue : '';\n    if (this.autoStart === undefined || this.autoStart === true) {\n      this.start();\n    }\n  }\n\n  ngOnDestroy() {\n    this.resetTimeout();\n  }\n\n  /**\n   * Start the timer\n   */\n  public start() {\n    this.initVar();\n    this.resetTimeout();\n    this.computeTimeUnits();\n    this.startTickCount();\n\n    this.onStart.emit(this);\n  }\n\n  /**\n   * Resume the timer\n   */\n  public resume() {\n    this.resetTimeout();\n\n    this.startTickCount();\n  }\n\n  /**\n   * Stop the timer\n   */\n  public stop() {\n    this.clear();\n\n    this.onStop.emit(this);\n  }\n\n  /**\n   * Reset the timer\n   */\n  public reset() {\n    this.initVar();\n    this.resetTimeout();\n    this.clear();\n    this.computeTimeUnits();\n    this.renderText();\n  }\n\n  /**\n   * Get the time information\n   * @returns TimeInterface\n   */\n  public get() {\n    return {\n      seconds: this.seconds,\n      minutes: this.minutes,\n      hours: this.hours,\n      days: this.days,\n      timer: this.timeoutId,\n      tick_count: this.tickCounter\n    };\n  }\n\n  /**\n   * Initialize variable before start\n   */\n  private initVar() {\n    this.startTime = this.startTime || 0;\n    this.endTime   = this.endTime || 0;\n    this.countdown = this.countdown || false;\n    this.tickCounter = this.startTime;\n\n    // Disable countdown if start time not defined\n    if (this.countdown && this.startTime === 0) {\n      this.countdown = false;\n    }\n\n    // Determine auto format\n    if (!this.format) {\n      this.format = (this.ngContentSchema.length > 5) ? 'user' : 'default';\n    }\n  }\n\n  /**\n   * Reset timeout\n   */\n  private resetTimeout() {\n    if (this.timeoutId) {\n      clearInterval(this.timeoutId);\n    }\n  }\n\n  /**\n   * Render the time to DOM\n   */\n  private renderText() {\n    let outputText;\n    if (this.format === 'user') {\n      // User presentation\n      const items = {\n        'seconds': this.seconds,\n        'minutes': this.minutes,\n        'hours': this.hours,\n        'days': this.days\n      };\n\n      outputText = this.ngContentSchema;\n\n      for (const key of Object.keys(items)) {\n        outputText = outputText.replace('[' + key + ']', (items as any)[key].toString());\n      }\n    } else if (this.format === 'intelli') {\n      // Intelli presentation\n      outputText = '';\n      if (this.days > 0) {\n        outputText += this.days.toString() + 'day' + ((this.days > 1) ? 's' : '') + ' ';\n      }\n      if ((this.hours > 0) || (this.days > 0)) {\n        outputText += this.hours.toString() + 'h ';\n      }\n      if (((this.minutes > 0) || (this.hours > 0)) && (this.days === 0)) {\n        outputText += this.minutes.toString().padStart(2, '0') + 'min ';\n      }\n      if ((this.hours === 0) && (this.days === 0)) {\n        outputText += this.seconds.toString().padStart(2, '0') + 's';\n      }\n    } else if (this.format === 'hms') {\n      // Hms presentation\n      outputText = this.hours.toString().padStart(2, '0') + ':';\n      outputText += this.minutes.toString().padStart(2, '0') + ':';\n      outputText += this.seconds.toString().padStart(2, '0');\n    } else {\n      // Default presentation\n      outputText = this.days.toString() + 'd ';\n      outputText += this.hours.toString() + 'h ';\n      outputText += this.minutes.toString() + 'm ';\n      outputText += this.seconds.toString() + 's';\n    }\n\n    this.renderer.setProperty(this.elt.nativeElement, 'innerHTML', outputText);\n  }\n\n  private clear() {\n    this.resetTimeout();\n    this.timeoutId = null;\n  }\n\n  /**\n   * Compute each unit (seconds, minutes, hours, days) for further manipulation\n   * @protected\n   */\n  protected computeTimeUnits() {\n    if (!this.maxTimeUnit || this.maxTimeUnit === 'day') {\n      this.seconds  = Math.floor(this.tickCounter % 60);\n      this.minutes  = Math.floor((this.tickCounter / 60) % 60);\n      this.hours    = Math.floor((this.tickCounter / 3600) % 24);\n      this.days     = Math.floor((this.tickCounter / 3600) / 24);\n    } else if (this.maxTimeUnit === 'second') {\n      this.seconds  = this.tickCounter;\n      this.minutes  = 0;\n      this.hours    = 0;\n      this.days     = 0;\n    } else if (this.maxTimeUnit === 'minute') {\n      this.seconds  = Math.floor(this.tickCounter % 60);\n      this.minutes  = Math.floor(this.tickCounter / 60);\n      this.hours    = 0;\n      this.days     = 0;\n    } else if (this.maxTimeUnit === 'hour') {\n      this.seconds  = Math.floor(this.tickCounter % 60);\n      this.minutes  = Math.floor((this.tickCounter / 60) % 60);\n      this.hours    = Math.floor(this.tickCounter / 3600);\n      this.days     = 0;\n    }\n\n    this.renderText();\n  }\n\n  /**\n   * Start tick count, base of this component\n   * @protected\n   */\n  protected startTickCount () {\n    const that = this;\n\n    that.timeoutId = setInterval(function() {\n      let counter;\n\n      if (that.countdown) {\n        // Compute finish counter for countdown\n        counter = that.tickCounter;\n\n        if (that.startTime > that.endTime) {\n          counter = that.tickCounter - that.endTime - 1;\n        }\n      } else {\n        // Compute finish counter for timer\n        counter = that.tickCounter - that.startTime;\n\n        if (that.endTime > that.startTime) {\n          counter = that.endTime - that.tickCounter - 1;\n        }\n      }\n\n      that.computeTimeUnits();\n\n      const timer: TimeInterface = {\n        seconds: that.seconds,\n        minutes: that.minutes,\n        hours: that.hours,\n        days: that.days,\n        timer: that.timeoutId,\n        tick_count: that.tickCounter\n      };\n\n      that.onTick.emit(timer);\n\n      if (counter < 0) {\n        that.stop();\n\n        that.onComplete.emit(that);\n        return;\n      }\n\n      if (that.countdown) {\n        that.tickCounter--;\n      } else {\n        that.tickCounter++;\n      }\n    }, 1000); // Each seconds\n  }\n\n}\n","\nexport interface TimeInterface {\n  tick_count: number;\n  seconds: number;\n  minutes: number;\n  hours: number;\n  days: number;\n  timer: any;\n}\n","import { NgModule } from '@angular/core';\nimport { CdTimerComponent } from './angular-cd-timer.component';\n\n\n\n@NgModule({\n  declarations: [CdTimerComponent],\n  imports: [\n  ],\n  exports: [CdTimerComponent]\n})\nexport class CdTimerModule { }\n"],"names":["EventEmitter","Component","ElementRef","Renderer2","Input","Output","NgModule"],"mappings":"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"}